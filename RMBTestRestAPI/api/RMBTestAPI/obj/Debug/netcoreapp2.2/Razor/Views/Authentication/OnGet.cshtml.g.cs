#pragma checksum "D:\Almond Careers\Projects\LessCard\Project\Backend\RMBTestRestAPI\api\RMBTestAPI\Views\Authentication\OnGet.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "082e57fe6d8ca7e9edb37833e1cc46eba26fa9cd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Authentication_OnGet), @"mvc.1.0.razor-page", @"/Views/Authentication/OnGet.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Views/Authentication/OnGet.cshtml", typeof(AspNetCore.Views_Authentication_OnGet), null)]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"082e57fe6d8ca7e9edb37833e1cc46eba26fa9cd", @"/Views/Authentication/OnGet.cshtml")]
    public class Views_Authentication_OnGet : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Views/Authentication/lesscard.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "D:\Almond Careers\Projects\LessCard\Project\Backend\RMBTestRestAPI\api\RMBTestAPI\Views\Authentication\OnGet.cshtml"
  
    Layout = null;


#line default
#line hidden
            BeginContext(85, 49, true);
            WriteLiteral("    <!DOCTYPE html>\r\n    <html lang=\"en\">\r\n\r\n    ");
            EndContext();
            BeginContext(134, 2675, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "082e57fe6d8ca7e9edb37833e1cc46eba26fa9cd3742", async() => {
                BeginContext(140, 2662, true);
                WriteLiteral(@"
        <meta charset=""UTF-8"">
        <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
        <meta http-equiv=""X-UA-Compatible"" content=""ie=edge"">
        <link rel=""stylesheet"" href=""https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"" integrity=""sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T""
              crossorigin=""anonymous"">
        <script src=""//netdna.bootstrapcdn.com/bootstrap/3.1.0/js/bootstrap.min.js""></script>
        <script src=""//code.jquery.com/jquery-1.11.1.min.js""></script>
        <style>
            .form--width {
                width: 350px;
                /* border: 1px solid; */
                padding: 40px;
                margin: 0px auto;
                box-shadow: 0px 0px 5px -2px #A09292;
                border-radius: 4px;
                margin-top: 57px;
            }

            .btn-primary {
                margin-top: 15px;
            }

            img {
                ");
                WriteLiteral(@"max-height: 70px;
                height: auto;
                margin-bottom: 40px;
                margin-left: auto;
                margin-right: auto;
            }

            .col-form-label {
                font-size: 14px;
            }

            h4 {
                font-size: 16px;
                font-weight: bold;
                margin-bottom: 20px;
                color: #D4B06A;
            }

            .btn-primary {
                background: #695517;
                font-size: 14px;
                border-color: #695517;
            }

                .btn-primary:hover {
                    background: none;
                    color: black;
                    border-color: #695517;
                }

                .btn-primary:disabled {
                    background: grey;
                    color: white;
                    border-color: grey !important;
                }

            .form-control:focus {
                border-color: #");
                WriteLiteral(@"695517;
                box-shadow: #695517;
                box-shadow: 0 0 0 .2rem rgba(105, 85, 23, 0.384);
            }

            #message {
                font-size: 13px;
                line-height: 1px;
                color: red;
                display: none;
            }

            .valid {
                display: none;
            }

            #confirm_Error {
                font-size: 13px;
                line-height: 1px;
                color: red;
                display: none;
            }
        </style>
        <title>Reset Your Password</title>
    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2809, 8, true);
            WriteLiteral("\r\n\r\n    ");
            EndContext();
            BeginContext(2817, 6937, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "082e57fe6d8ca7e9edb37833e1cc46eba26fa9cd7690", async() => {
                BeginContext(2823, 94, true);
                WriteLiteral("\r\n        <div class=\"container\">\r\n            <div class=\"row form--width\">\r\n                ");
                EndContext();
                BeginContext(2917, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "082e57fe6d8ca7e9edb37833e1cc46eba26fa9cd8174", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2964, 6783, true);
                WriteLiteral(@"
                <form>
                    <h4>Reset Your Password</h4>
                    <div class=""form-group row"">
                        <label for=""colFormLabel"">Email</label>
                        <input type=""email"" class=""form-control"" id=""colFormLabel"" placeholder="""">
                    </div>

                    <div class=""form-group row"">
                        <label for=""newPassword"">New Password</label>
                        <input type=""password"" class=""form-control"" id=""newPassword"" pattern=""/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[#_!*$%^&+=])(?=\\S+$){8,}$/gm"" placeholder="""">
                        <!-- <input type=""password"" class=""form-control"" id=""newPassword"" pattern=""/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z])(?=.*[\d,`~!#$%^&*);'[\]\x22{}.]).{8,}$/gm"" placeholder=""""> -->
                    </div>
                    <div id=""message"" class=""password__validation--text"">
                        <p>password must contain at least</p>
                       ");
                WriteLiteral(@" <p id=""lowerCase"">one lowercase character</p>
                        <p id=""upperCase"">one uppercase character</p>
                        <p id=""number"">one number</p>
                        <p id=""symbol"">one symbol</p>
                        <p id=""length"">8 characters</p>
                    </div>

                    <div class=""form-group row"">
                        <label for=""confirmPassword"">Confirm New Password</label>
                        <input type=""password"" class=""form-control"" id=""confirmPassword"" placeholder="""">
                    </div>
                    <div>
                        <p id=""confirm_Error"">password <b>Must</b> match!</p>
                    </div>
                    <div class=""form-group row"">
                        <!-- <div class=""col""> -->
                        <button type=""submit"" id=""submit"" disabled class=""btn btn-primary form-control"">Reset Password</button>
                        <!-- </div> -->
                    </div>
       ");
                WriteLiteral(@"         </form>
            </div>
        </div>

        <script src=""https://code.jquery.com/jquery-1.11.2.min.js"" type=""text/javascript""></script>
        <script>
        $(document).ready(function () {
            $(""#submit"").click(function (e) {
                var formData = new FormData();
                var url = window.location.href;
                formData.append('Email', $(""#colFormLabel"").val());
                formData.append('Password', $(""#newPassword"").val());
                formData.append('ConfirmPassword', $(""#confirmPassword"").val());
                e.preventDefault();
                $.ajax({
                    url: url,
                    method: ""POST"",
                    data: formData,
                    datatype: ""text"",
                    processData: false,
                    contentType: false,
                    success: function (formData) {
                        alert(""Success Password Changed"");
                    }
                })");
                WriteLiteral(@";
            });
        });

        var password = document.querySelector('#newPassword');
        var message = document.querySelector('#message');
        var lower = document.querySelector('#lowerCase');
        var upper = document.querySelector('#upperCase');
        var number = document.querySelector('#number');
        var symbol = document.querySelector('#symbol');
        var length = document.querySelector('#length');
        var submit = document.querySelector('#submit');
        var confirm_Error = document.querySelector('#confirm_Error');
        var confirm_password = document.querySelector('#confirmPassword');


        // display the message div when the user clicks on the password input feild
        // password.onfocus = function(){
        //     message.style.display = 'block';
        //     }

        // checek for each password condictions and apply the neccessary styles


        // hide lowercase error message when the condiction is true
        password.o");
                WriteLiteral(@"nkeyup = function(){
            message.style.display = 'block';
            var lowerCase = /[a-z]/g;
            if (password.value.match(lowerCase)){
                lower.classList.add('valid');
            }
            else{
                lower.classList.remove('valid')
            }

            // hide uppercase error message when the condiction is true
            var upperCase = /[A-Z]/g;
            if(password.value.match(upperCase)){
                upper.classList.add('valid')
            }
            else{
                upper.classList.remove('valid')
            }

            //hide the number error message  when condiction is true
            var numberChar = /[0-9]/g;
            if(password.value.match(numberChar)){
                number.classList.add('valid');
            }
            else{
                number.classList.remove('valid')
            }

            //hide the length error message  when condiction is true
            if(password.value.l");
                WriteLiteral(@"ength >= 8 ){
                length.classList.add('valid')
            }
            else{
                length.classList.remove('valid')
            }
            var symbolChar = /[#_!*$%^&+=]/g;
            if(password.value.match(symbolChar)){
                symbol.classList.add('valid');
            }
            else{
                symbol.classList.remove('valid')
            }

            if(message.clientHeight <= 1){
                message.style.display = 'none';
            }
            else{
                message.style.display = 'block';
            }

            // console.log(password.value)
        }

        confirm_password.onkeyup = function(){

            // console.log('[confirm password clicked]' + password.value)
            // password.value
            if(confirm_password.value != password.value){
                confirm_Error.style.display = 'block';
                submit.disable == true;
            }
            else{
                con");
                WriteLiteral(@"firm_Error.style.display = 'none';
                submit.disable == false;
            }

            if(password.value == confirm_password.value)
            {
                submit.removeAttribute('disabled')
                }
            else{
                submit.setAttribute('disabled', true)
                submit.setA
            }
            // if((confirmPassword.value.match(password))){
            //     confirmPassword.classList.remove('valid')
            // }
            // else{
            //     confirmPassword.classList.add('valid')
            // }
        }



        </script>

    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9754, 13, true);
            WriteLiteral("\r\n\r\n</html>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<LessCardAPI.Views.Authentication.OnGetModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<LessCardAPI.Views.Authentication.OnGetModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<LessCardAPI.Views.Authentication.OnGetModel>)PageContext?.ViewData;
        public LessCardAPI.Views.Authentication.OnGetModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
